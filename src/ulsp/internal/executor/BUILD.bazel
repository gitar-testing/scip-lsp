load("@bazel_gomock//rules:gomock.bzl", "gomock")
load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = ["executor.go"],
    importpath = "github.com/uber/scip-lsp/src/ulsp/internal/executor",
    visibility = ["//src/ulsp:__subpackages__"],
    deps = [
        "@org_uber_go_fx//:go_default_library",
        "@org_uber_go_zap//:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = ["executor_test.go"],
    embed = [":go_default_library"],
    deps = [
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
        "@org_uber_go_fx//:go_default_library",
        "@org_uber_go_fx//fxtest:go_default_library",
        "@org_uber_go_zap//:go_default_library",
        "@org_uber_go_zap//zaptest/observer:go_default_library",
    ],
)

gomock(
    name = "executormock",
    out = "executor_mock_for_test.go",
    interfaces = [
        "Executor",
    ],
    library = ":go_default_library",
    mockgen_tool = "@org_uber_go_mock//mockgen",
    package = "executormock",
    self_package = "github.com/uber/scip-lsp/src/ulsp/internal/executor",
)

go_library(
    name = "go_loader_gomock_library",
    srcs = [":executormock"],
    importpath = "github.com/uber/scip-lsp/src/ulsp/internal/executor/executormock",
    visibility = ["//visibility:public"],
    deps = [
        ":go_default_library",
        "@org_uber_go_fx//:go_default_library",
        "@org_uber_go_mock//gomock:go_default_library",
        "@org_uber_go_zap//:go_default_library",
    ],
)
